package com.example.jwtnew.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;

import com.example.jwtnew.security.jwtauthenticationendpoint;
import com.example.jwtnew.security.jwtauthenticationfilter;

@Configuration
public class jwtconfig {

	
	@Autowired
    private jwtauthenticationendpoint point;
    @Autowired
    private jwtauthenticationfilter filter;

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {

        http.csrf(csrf -> csrf.disable())
        .cors(cors-> cors.disable())
        .authorizeHttpRequests(auth-> auth.requestMatchers("/home/**")
        .authenticated().requestMatchers("/auth/login").permitAll().anyRequest().authenticated())
        .exceptionHandling(ex-> ex.authenticationEntryPoint(point))
        .sessionManagement(session-> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))
        ;
        
        
          http.addFilterBefore(filter,UsernamePasswordAuthenticationFilter.class)  ;    
        return http.build();
    }
}
